#include<iostream>
using namespace std;

class Point{
public:
	//设置x
	void setX(int x){
		X = x;
	}
	//获取x
	int getX(){
		return X;
	}

	//设置y
	void setY(int y){
		Y = y;
	}
	//获取y
	int getY(){
		return Y;
	}
private:
	int X;
	int Y;
};

//圆类
class Circle{
public:
	//设置半径
	void setR(int r){
		R = r;
	}
	int getR(){
		return R;
	}
	//设置圆心
	void setCenter(Point center){
		Center = center;
	}
	Point getCenter(){
		return Center;
	}
private:
	int R;
	Point Center;//在类中可以让另一个类作为本类的成员
};

void isInCircle(Circle &c, Point &p){
	//计算两点之间距离
	int distence =
		(c.getCenter().getX() - p.getX())*(c.getCenter().getX() - p.getX()) +
		(c.getCenter().getY() - p.getY())*(c.getCenter().getY() - p.getY());
	int rDistence = c.getR()*c.getR();
	//判断关系
	if (distence == rDistence)
		cout << "点在圆上" << endl;
	else if (distence < rDistence)
		cout << "点在圆内" << endl;
	else
		cout << "点在圆外" << endl;
}

int main(){
	//创建圆心
	Circle c;
	c.setR(10);
	Point center;
	center.setX(10);
	center.setY(0);
	c.setCenter(center);
	
	//创建点
	Point p;
	p.setX(10);
	p.setY(11);

	//判断关系
	isInCircle(c, p);
	system("pause");
	return 0;
}
